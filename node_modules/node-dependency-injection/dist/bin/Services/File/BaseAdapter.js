'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

var BaseAdapter = function () {
  function BaseAdapter() {
    _classCallCheck(this, BaseAdapter);
  }

  _createClass(BaseAdapter, [{
    key: 'defaultConfiguration',

    /**
     * @return {object}
     */
    get: function get() {
      return {
        parameters: {
          'some.parameter.foo': 'foo',
          'some.parameter.bar': 'bar'
        },
        imports: [{ resource: '/path/to/another-file.' + this.constructor.FORMAT }],
        services: {
          'some.service.key': {
            class: './some/class/path',
            arguments: ['@some.service.key2', '%some.parameter.foo%']
          },
          'some.service.key2': {
            class: './some/class/path2',
            arguments: ['%some.parameter.bar%']
          }
        }
      };
    }
  }]);

  return BaseAdapter;
}();

exports.default = BaseAdapter;