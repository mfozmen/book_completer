'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

var PassConfig = function () {
  function PassConfig() {
    _classCallCheck(this, PassConfig);
  }

  _createClass(PassConfig, null, [{
    key: 'isValidType',


    /**
     * @param {string} type
     * @returns {boolean}
     */
    value: function isValidType(type) {
      return this.TYPE_BEFORE_OPTIMIZATION === type || this.TYPE_OPTIMIZE === type || this.TYPE_BEFORE_REMOVING === type || this.TYPE_REMOVE === type || this.TYPE_AFTER_REMOVING === type;
    }
  }, {
    key: 'TYPE_BEFORE_OPTIMIZATION',

    /**
     * @returns {string}
     */
    get: function get() {
      return 'beforeOptimization';
    }

    /**
     * @returns {string}
     */

  }, {
    key: 'TYPE_OPTIMIZE',
    get: function get() {
      return 'optimize';
    }

    /**
     * @returns {string}
     */

  }, {
    key: 'TYPE_BEFORE_REMOVING',
    get: function get() {
      return 'beforeRemoving';
    }

    /**
     * @returns {string}
     */

  }, {
    key: 'TYPE_REMOVE',
    get: function get() {
      return 'remove';
    }

    /**
     * @returns {string}
     */

  }, {
    key: 'TYPE_AFTER_REMOVING',
    get: function get() {
      return 'afterRemoving';
    }
  }]);

  return PassConfig;
}();

exports.default = PassConfig;