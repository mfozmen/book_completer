'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _ServiceCircularReferenceException = require('./Exception/ServiceCircularReferenceException');

var _ServiceCircularReferenceException2 = _interopRequireDefault(_ServiceCircularReferenceException);

var _PassConfig = require('./PassConfig');

var _PassConfig2 = _interopRequireDefault(_PassConfig);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

var Compiler = function () {
  /**
   * @param {ContainerBuilder} container
   */
  function Compiler(container) {
    _classCallCheck(this, Compiler);

    this._container = container;
  }

  _createClass(Compiler, [{
    key: 'run',
    value: function run() {
      try {
        if (!this._container.frozen) {
          this._loadExtensions();
          this._optimize();
          this._remove();
        }
      } catch (error) {
        if (error instanceof RangeError) {
          throw new _ServiceCircularReferenceException2.default();
        }

        throw error;
      }
    }

    /**
     * @private
     */

  }, {
    key: '_loadExtensions',
    value: function _loadExtensions() {
      var _iteratorNormalCompletion = true;
      var _didIteratorError = false;
      var _iteratorError = undefined;

      try {
        for (var _iterator = this._container.extensions[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {
          var extension = _step.value;

          extension.load(this);
        }
      } catch (err) {
        _didIteratorError = true;
        _iteratorError = err;
      } finally {
        try {
          if (!_iteratorNormalCompletion && _iterator.return) {
            _iterator.return();
          }
        } finally {
          if (_didIteratorError) {
            throw _iteratorError;
          }
        }
      }
    }

    /**
     * @private
     */

  }, {
    key: '_optimize',
    value: function _optimize() {
      this._container._compilerPass.process(_PassConfig2.default.TYPE_BEFORE_OPTIMIZATION);
      this._container._compilerPass.process(_PassConfig2.default.TYPE_OPTIMIZE);
    }

    /**
     * @private
     */

  }, {
    key: '_remove',
    value: function _remove() {
      this._container._compilerPass.process(_PassConfig2.default.TYPE_BEFORE_REMOVING);
      this._container._compilerPass.process(_PassConfig2.default.TYPE_REMOVE);
      this._container._compilerPass.process(_PassConfig2.default.TYPE_AFTER_REMOVING);
    }
  }]);

  return Compiler;
}();

exports.default = Compiler;